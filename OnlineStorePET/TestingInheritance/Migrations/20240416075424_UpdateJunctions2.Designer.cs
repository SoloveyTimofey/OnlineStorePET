// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestingInheritance.Models.Data;

#nullable disable

namespace TestingInheritance.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240416075424_UpdateJunctions2")]
    partial class UpdateJunctions2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestingInheritance.Models.Data.Clothing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SleeveLenght")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.ClothingColorJunction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ClothingId")
                        .HasColumnType("bigint");

                    b.Property<long>("ColorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClothingId");

                    b.HasIndex("ColorId");

                    b.ToTable("ClothingColorJunctions");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.Shoe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shoes");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.ShoeColorJunction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ColorId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShoeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ShoeId");

                    b.ToTable("ShoeColorJunctions");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.ClothingColorJunction", b =>
                {
                    b.HasOne("TestingInheritance.Models.Data.Clothing", "Clothing")
                        .WithMany("ClothingColorJunctions")
                        .HasForeignKey("ClothingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestingInheritance.Models.Data.Color", "Color")
                        .WithMany("ClothingColorJunctions")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clothing");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.ShoeColorJunction", b =>
                {
                    b.HasOne("TestingInheritance.Models.Data.Color", "Color")
                        .WithMany("ShoeColorJunctions")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestingInheritance.Models.Data.Shoe", "Shoe")
                        .WithMany("ShoeColorJunctions")
                        .HasForeignKey("ShoeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Shoe");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.Clothing", b =>
                {
                    b.Navigation("ClothingColorJunctions");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.Color", b =>
                {
                    b.Navigation("ClothingColorJunctions");

                    b.Navigation("ShoeColorJunctions");
                });

            modelBuilder.Entity("TestingInheritance.Models.Data.Shoe", b =>
                {
                    b.Navigation("ShoeColorJunctions");
                });
#pragma warning restore 612, 618
        }
    }
}
